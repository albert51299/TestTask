// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTask.Models;

namespace TestTask.Migrations
{
    [DbContext(typeof(VaccinationsContext))]
    [Migration("20190920150931_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestTask.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("DATE");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("Gender")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("SNILS")
                        .IsRequired();

                    b.Property<string>("SecondName");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1980, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Иван",
                            Gender = "м",
                            LastName = "Васильев",
                            SNILS = "001"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1990, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Василий",
                            Gender = "м",
                            LastName = "Иванов",
                            SNILS = "002"
                        });
                });

            modelBuilder.Entity("TestTask.Models.Vaccination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Consent");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE");

                    b.Property<int>("PatientId");

                    b.Property<string>("VaccineName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Vaccinations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Consent = false,
                            Date = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = 1,
                            VaccineName = "Эджерикс"
                        },
                        new
                        {
                            Id = 2,
                            Consent = false,
                            Date = new DateTime(2019, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = 1,
                            VaccineName = "Вианвак"
                        },
                        new
                        {
                            Id = 3,
                            Consent = true,
                            Date = new DateTime(2019, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = 2,
                            VaccineName = "АКДС"
                        },
                        new
                        {
                            Id = 4,
                            Consent = true,
                            Date = new DateTime(2019, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = 2,
                            VaccineName = "БЦЖ"
                        });
                });

            modelBuilder.Entity("TestTask.Models.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Vaccines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Эджерикс"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Вианвак"
                        },
                        new
                        {
                            Id = 3,
                            Name = "АКДС"
                        },
                        new
                        {
                            Id = 4,
                            Name = "БЦЖ"
                        });
                });

            modelBuilder.Entity("TestTask.Models.Vaccination", b =>
                {
                    b.HasOne("TestTask.Models.Patient", "Patient")
                        .WithMany("Vaccinations")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
